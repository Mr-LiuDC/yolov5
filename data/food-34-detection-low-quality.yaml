path: ../datasets/food-34-detection-low-quality
val: yolo_val_list.txt
test: yolo_test_list.txt
train: yolo_train_list.txt

# python train.py --epochs 20 --batch-size 8 --weights ./weights/yolov5m.pt --data data/food-34-detection-low-quality.yaml --name food-34-detection-low-quality-s-20-epochs

names:
  0: box
  1: cup
  2: corn
  3: pear
  4: bowl
  5: cake
  6: mango
  7: peach
  8: bread
  9: plate
  10: toast
  11: apple
  12: walnut
  13: orange
  14: banana
  15: tomato
  16: pitaya
  17: cucumber
  18: pineapple
  19: drumstick
  20: ice_cream
  21: boxed_egg
  22: hamimelon
  23: steamedbun
  24: mangosteen
  25: watermelon
  26: boxed_milk
  27: grapefruit
  28: pomegranate
  29: bottled_drink
  30: canned_beverage
  31: steamed_stuffed_bun
  32: roasted_sweet_potato
  33: deep_fried_dough_stick

download: |
  import os
  import shutil
  import xml.etree.ElementTree as ET
  from random import shuffle

  from utils.general import download, Path


  def convert_label(path, lb_path, ann_name):
      def convert_box(size, box):
          dw, dh = 1. / size[0], 1. / size[1]
          x, y, w, h = (box[0] + box[1]) / 2.0 - 1, (box[2] + box[3]) / 2.0 - 1, box[1] - box[0], box[3] - box[2]
          return x * dw, y * dh, w * dw, h * dh

      in_file = open(path / f'Annotations/{ann_name}')
      out_file = open(lb_path, 'w')
      tree = ET.parse(in_file)
      root = tree.getroot()
      size = root.find('size')
      w = int(size.find('width').text)
      h = int(size.find('height').text)

      names = list(yaml['names'].values())
      for obj in root.iter('object'):
          cls = obj.find('name').text
          if cls in names and int(obj.find('difficult').text) != 1:
              xmlbox = obj.find('bndbox')
              bb = convert_box((w, h), [float(xmlbox.find(x).text) for x in ('xmin', 'xmax', 'ymin', 'ymax')])
              cls_id = names.index(cls)  # class id
              out_file.write(" ".join([str(a) for a in (cls_id, *bb)]) + '\n')


  val_rate = 0.2
  test_rate = 0.1
  train_rate = 0.8

  data_name = 'food-34-detection-low-quality'
  base_dir = Path(yaml['path'])
  url = 'https://nutrition-bucket.rplushealth.cn/datasets/food_detection/'
  urls = [f'{url}{data_name}.zip']
  download(urls, dir=base_dir.parent, delete=False, curl=True, threads=len(urls))

  lbs_path = base_dir / 'labels'
  lbs_path.mkdir(exist_ok=True, parents=True)

  ann_files = []
  for root, dirs, files in os.walk(base_dir / 'Annotations'):
      ann_files = files

  for ann_file in ann_files:
      lb_path = lbs_path / (ann_file.replace('.xml', '.txt'))
      convert_label(base_dir, lb_path, ann_file)

  # (base_dir / 'JPEGImages').rename(base_dir / 'images')
  shutil.copytree(base_dir / 'JPEGImages', base_dir / 'images')
  shuffle(ann_files)
  val_files = ann_files[:round(len(ann_files) * val_rate)]
  test_files = ann_files[:round(len(ann_files) * test_rate)]
  train_files = ann_files[round(len(ann_files) * val_rate):]
  open(f'{base_dir}/yolo_val_list.txt', 'w').write("./images/" + "./images/".join([file.replace('.xml', '.jpg') + '\n' for file in val_files]))
  open(f'{base_dir}/yolo_test_list.txt', 'w').write("./images/" + "./images/".join([file.replace('.xml', '.jpg') + '\n' for file in test_files]))
  open(f'{base_dir}/yolo_train_list.txt', 'w').write("./images/" + "./images/".join([file.replace('.xml', '.jpg') + '\n' for file in train_files]))
